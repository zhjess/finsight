// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String          @id @default(cuid()) 
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  email         String          @unique
  password      String          // store hashed password
  transactions  Transaction[]
  kpis          Kpi[]
}

model Transaction {
  id                  String          @id @default(cuid())
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  transactionProducts TransactionProduct[]
  customer            String
  userId              String
  users               User            @relation(fields: [userId], references: [id])
}

model Product {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  description   String
  price         Int
  expense       Int
  transactionProducts TransactionProduct[]
}

model TransactionProduct {
  id            String          @id @default(cuid())
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  transactionId String
  transaction   Transaction     @relation(fields: [transactionId], references: [id])
  productId     String
  product       Product         @relation(fields: [productId], references: [id])
  quantity      Int

  @@unique([transactionId, productId])
}

model Day {
  id            String          @id @default(cuid()) 
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  date          DateTime      
  revenue       Int             // cents instead of fractional dollar
  expenses      Int             // cents instead of fractional dollar
  kpiId         String
  kpi           Kpi             @relation(fields: [kpiId], references: [id])
}

model Month {
  id                      String     @id @default(cuid()) 
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  date                    DateTime   
  revenue                 Int        // cents instead of fractional dollar
  expenses                Int        // cents instead of fractional dollar
  operationalExpenses     Int        // cents instead of fractional dollar
  nonOperationalExpenses  Int        // cents instead of fractional dollar
  kpiId                   String
  kpi                     Kpi        @relation(fields: [kpiId], references: [id])
}

model Kpi {
  id                    String    @id @default(cuid())       
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  totalProfit           Int       // Store in cents
  totalRevenue          Int       // Store in cents
  totalExpenses         Int       // Store in cents
  expensesByCategory    Json      // JSON to store expenses by category
  userId                String
  user                  User      @relation(fields: [userId], references: [id])
  monthlyData           Month[]  
  dailyData             Day[]    
}
